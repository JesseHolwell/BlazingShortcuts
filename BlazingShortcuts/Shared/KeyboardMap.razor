@inject AppState AppState
@functions{
    [CascadingParameter(Name = "ViewModel")] protected BindingsViewModel model { get; set; }
}

<div class="content-main">
    <div class="keyboard">

        <div class="section-a">
            <div class="function-keys">

                <KeyboardKey Key="model.Keyboard.Keys[Key.Escape]" Classes="function space1" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F1]" Classes="function" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F2]" Classes="function" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F3]" Classes="function" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F4]" Classes="function space2" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F5]" Classes="function" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F6]" Classes="function" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F7]" Classes="function" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F8]" Classes="function space2" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F9]" Classes="function" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F10]" Classes="function" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F11]" Classes="function" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F12]" Classes="function" />

            </div>

            <div>

                <KeyboardKey Key="model.Keyboard.Keys[Key.Tilde]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Num1]" Classes="num" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Num2]" Classes="num" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Num3]" Classes="num" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Num4]" Classes="num" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Num5]" Classes="num" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Num6]" Classes="num" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Num7]" Classes="num" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Num8]" Classes="num" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Num9]" Classes="num" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Num0]" Classes="num" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Underscore]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Plus]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Backspace]" Classes="backspace" />

            </div>

            <div>

                <KeyboardKey Key="model.Keyboard.Keys[Key.Tab]" Classes="tab" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Q]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.W]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.E]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.R]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.T]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Y]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.U]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.I]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.O]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.P]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.CurlyOpen]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.CurlyClose]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Pipe]" Classes="" />

            </div>

            <div>

                <KeyboardKey Key="model.Keyboard.Keys[Key.Caps]" Classes="caps" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.A]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.S]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.D]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.F]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.G]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.H]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.J]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.K]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.L]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Colon]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Quote]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Enter]" Classes="enter" />

            </div>

            <div>

                <KeyboardKey Key="model.Keyboard.Keys[Key.LShift]" Classes="shift" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Z]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.X]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.C]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.V]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.B]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.N]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.M]" Classes="letter" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Comma]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Dot]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Slash]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.RShift]" Classes="shift" />

            </div>

            <div>

                <KeyboardKey Key="model.Keyboard.Keys[Key.LCtrl]" Classes="ctrl" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.LWin]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.LAlt]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Space]" Classes="space" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.RAlt]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.RWin]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Func]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.RCtrl]" Classes="ctrl" />

            </div>
        </div>

        <div class="section-b">
            <div class="utility-1">

                <KeyboardKey Key="model.Keyboard.Keys[Key.PrintScreen]" Classes="utility" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.ScrollLock]" Classes="utility" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.PauseBreak]" Classes="utility" />

            </div>

            <div class="utility-2">

                <KeyboardKey Key="model.Keyboard.Keys[Key.Insert]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.Home]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.PageUp]" Classes="" />

            </div>

            <div class="social-distance">

                <KeyboardKey Key="model.Keyboard.Keys[Key.Delete]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.End]" Classes="" />
                <KeyboardKey Key="model.Keyboard.Keys[Key.PageDown]" Classes="" />

            </div>

            <div class="arrows">
                <div>

                    <KeyboardKey Key="model.Keyboard.Keys[Key.Hidden]" Classes="hidden" />
                    <KeyboardKey Key="model.Keyboard.Keys[Key.Up]" Classes="" />
                    <KeyboardKey Key="model.Keyboard.Keys[Key.Hidden]" Classes="hidden" />

                </div>
                <div>

                    <KeyboardKey Key="model.Keyboard.Keys[Key.Left]" Classes="" />
                    <KeyboardKey Key="model.Keyboard.Keys[Key.Down]" Classes="" />
                    <KeyboardKey Key="model.Keyboard.Keys[Key.Right]" Classes="" />

                </div>

            </div>

        </div>
    </div>
</div>

<br />

@*<button @onclick="@(() => Keyasdf())" class="btn btn-outline-primary">Jerry</button>*@

@code {
    public async void Keyasdf()
    {
        //model.Keys.First().IsAvailable = !model.Keys.First().IsAvailable;
        //this.StateHasChanged();



    }

}

<style>

    .keyboard {
        width: 100%;
        /*        height: 320px;*/
        background-color: #111;
        margin: 0px auto;
        border-radius: 9px;
        padding: 30px;
        color: #eee;
        display: inline-flex;
    }

    .section-a {
        width: 80%;
        margin-right: 5%;
    }

    .section-b {
        width: 20%;
    }

    .key {
        width: 7%;
        height: 48px;
        background-color: #333;
        border-radius: 4px;
        cursor: pointer;
        transition: box-shadow 0.7s ease;
        float: left;
        background-clip: content-box;
        padding: 2px;
        font-size: 0.8rem;
    }

    .section-b .key {
        width: 33%;
    }



    .backspace.key, .tab.key {
        width: 9%;
    }

    .caps.key {
        width: 10%;
    }

    .enter.key {
        width: 13%;
    }

    .shift.key {
        width: 15%;
    }

    .space.key {
        width: 51%;
    }

    .space1 {
        margin-right: 5%;
    }

    .space2 {
        margin-right: 2%;
    }

    .function {
        margin-bottom: 5px;
    }

    .social-distance .key {
        margin-bottom: 48px;
    }

    .hidden.key {
        visibility: hidden;
    }

    /*pressed*/
    .pressed {
        background-color: purple;
    }

    /*available*/
    .available {
        /*        box-shadow: green, 5px, 5px;*/
        background-color: green;
    }

    /*::selection {
        background-color: none;
        color: inherit;
    }*/

    /*    body {
        background-color: #14B524;
    }*/

    /*.keyboard {
        height: 320px;
        background-color: #111;
        margin: 0px auto;
        border-radius: 9px;
        padding: 30px;
        color: #eee;
    }

    .key {
        width: 40px;
        height: 40px;
        display: block;
        background-color: #333;
        text-align: left;
        padding-left: 8px;
        line-height: 29px;
        border-radius: 2px;
        float: left;
        margin-left: 2px;
        margin-bottom: 2px;
        cursor: pointer;
        transition: box-shadow 0.7s ease;
    }

    .section-a {
        width: 650px;
        height: 260px;
        float: left;
    }

    .section-b {
        width: 150px;
        height: 260px;
        float: left;
    }

    .function {
        font-size: 12px;
        width: 30px;
        height: 30px;
        margin-bottom: 15px;
    }

    .small {
        font-size: 10px;
        line-height: 13px;
        text-align: center;
        padding: 0 5px;
        padding-top: 2px;
        height: 28px !important;
    }

    .space1 {
        margin-right: 43px !important;
    }

    .space2 {
        margin-right: 25px !important;
    }

    .dual {
        font-size: 14px;
        line-height: 20px;
        width: 30px;
    }

    .backspace {
        width: 84px;
        font-size: 12px;
    }

    .tab {
        width: 50px;
        line-height: 40px;
        font-size: 13px;
    }

    .letter {
        width: 30px;
    }

    .slash {
        width: 64px;
    }

    .caps {
        width: 70px;
        font-size: 12px;
        line-height: 18px;
    }

    .enter {
        width: 92px;
        line-height: 40px;
        text-align: center;
        padding-left: 0;
    }

    .shift.left {
        width: 90px;
        line-height: 40px;
        font-size: 13px;
    }

    .shift.right {
        width: 104px;
        line-height: 40px;
        font-size: 13px;
    }

    .ctrl {
        width: 50px;
        line-height: 40px;
        font-size: 13px;
    }

    .space {
        width: 234px;
    }

    .arrows {
        position: relative;
        top: 42px;
    }

    .sec-func .key {
        width: 32px;
        font-size: 10px;
        text-align: left;
        line-height: 40px;
        float: left;
    }

    .sec-func div.dual {
        line-height: 20px;
    }

    .arrows .key {
        text-align: center;
        padding-left: 7px;
        margin-left: 2px;
    }

    .hidden {
        visibility: hidden;
    }

    .key:hover {
        box-shadow: 0px 0px 10px #3a0647;
        z-index: 1000;
    }*/
</style>


@*
    User presses or clicks a key
    Then any keys that have a combination would light up
    Potentially have an overlay that shows what it would do
    Or just have a hover effect for the lit up keys

    Single press keybinds exist - things like F5
    Chords do not have single key variants
    eg there is no Ctrl+E because Ctrl+E + D exists

*@